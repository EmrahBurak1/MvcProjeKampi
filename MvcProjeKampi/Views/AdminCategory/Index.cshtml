@using EntityLayer.Concrete
@model List<Category>
@*database üzerinden verilerin çekilmesi için entitylayar.concrete dizini projeye dahil edildi.*@
@* Daha sonra model oluşturuldu. Model verileri listelemek için kullanılacak bileşendir. C# komutları kullanabilmek için ilgili ifadenin başına @ işareti koyulur. Model değer olarak categorilerin listesini tutacak *@


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<br />
<table class="table table-bordered">
    <tr>
        <th>#</th>
        <th>Kategori Adı</th>
        <th>Sil</th>
        <th>Güncelle</th>
        <th>Başlıklar</th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <th>@item.CategoryID</th>
            <td>@item.CategoryName</td>
            <td><a href="/AdminCategory/DeleteCategory/@item.CategoryID" class="btn btn-danger">Sil</a></td> @*Oluşrutuğumuz deletecategory actionresultı için burada link veriyoruz. Yani Sil butoununa basılınca DeleteCategory ye gidecek. Giderken de ID götürecek. Bunu da item.categoryid ile yapıyor. Yani her bir sil butonuna ayrı ayrı categoryid gönderilir.*@
            <td><a href="/AdminCategory/EditCategory/@item.CategoryID" class="btn btn-warning">Güncelle</a></td>
            <td><a href="#" class="btn btn-primary">Başlıklar</a></td>
        </tr>
    }
</table>
<a href="/AdminCategory/AddCategory" class="btn btn-info">Yeni Kategori</a> @* Burada yönlendirme işlemi yapılıyor. Category sinifi içerisinde bulunan AddCategory alanına git anlamındadır.  *@

